name: sentry pull request bot

# Note this event happens on Issue comments AND PR comments,
# we make sure that we only respond to PR comments.
on:
  issues:
    types: [labeled, unlabeled]
  issue_comment:
    types: [created, edited]
  pull_request:
    types: [opened, edited]

jobs:
  debug:
    runs-on: ubuntu-16.04
    steps:
      - name: debug
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"


  cancel-jobs:
    name: cancel jobs
    runs-on: ubuntu-16.04
    if: contains(github.event.comment.body, '/cancel') && github.event.issue.pull_request.url != ''

    steps:
      - name: Check getsentry membership
        id: org
        uses: actions/github-script@v3
        with:
          script: |
            try {
              const result = await github.orgs.checkMembershipForUser({
                org: 'getsentry',
                username: context.payload.sender.login,
              })
              return result.status == 204;
            } catch {
              return false;
            }

      - name: Cancel jobs for PR
        if: steps.org.outputs.result == 'true'
        uses: actions/github-script@v3
        with:
          script: |
            const owner = '${{ github.repository_owner }}';
            const repo = '${{ github.event.repository.name }}';
            const pr = await github.pulls.get({
              owner,
              repo,
              pull_number: ${{ github.event.issue.number }},
            });
            console.log(pr);
            // XXX: This can potentially cancel `master` runs if this is from a fork (but only getsentry members can invoke this)
            const workflowRuns = await github.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              branch: pr.data.head.ref,
            });
            console.log(workflowRuns);
            await Promise.all(workflowRuns.map(run => github.actions.cancelWorkflowRun({
              owner,
              repo,
              run_id: run.id,
            })));


  # TODO(billy): Move this into an external action as we add more functionality
  test-getsentry:
    name: test getsentry
    runs-on: ubuntu-16.04

    # Ensure this bot only responds for pull requests and only for the main repository
    if: >-
      (github.event.issue.pull_request.url != '' || github.event.pull_request.id != '') &&
      (contains(github.event.comment.body, '#test-getsentry') || contains(github.event.pull_request.body, '#test-getsentry'))

    steps:
      - name: Check getsentry membership
        id: org
        uses: actions/github-script@v3
        with:
          script: |
            try {
              const result = await github.orgs.checkMembershipForUser({
                org: 'getsentry',
                username: context.payload.sender.login,
              })
              return result.status == 204;
            } catch {
              return false;
            }

      - name: Fetch getsentry token
        if: steps.org.outputs.result == 'true'
        id: getsentry
        uses: getsentry/action-github-app-token@v1
        with:
          app_id: ${{ secrets.SENTRY_INTERNAL_APP_ID }}
          private_key: ${{ secrets.SENTRY_INTERNAL_APP_PRIVATE_KEY }}

      - name: Dispatch getsentry tests
        if: steps.org.outputs.result == 'true'
        uses: actions/github-script@v3
        with:
          github-token: ${{ steps.getsentry.outputs.token }}
          script: |
            github.actions.createWorkflowDispatch({
              owner: 'getsentry',
              repo: 'getsentry',
              workflow_id: 'acceptance.yml',
              ref: 'master',
              inputs: {
                'sentry-sha': '${{ github.event.pull_request.head.sha }}',
              }
            })
